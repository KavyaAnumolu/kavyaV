scorer.ts.............................................

import {Batsman} from './batsman';
export class Scorer
{
    playerOnStrike:Batsman | null;
    listofBatsman:Array<Batsman>;
    totalScore:number;
    constructor(){
        this.totalScore=0;
        this.playerOnStrike=null;
        this.listofBatsman=[];
    }
     addBatsman(batsman:Batsman){
         this.listofBatsman.push(batsman);
     }
     changeStrike()
     {
         if(this.playerOnStrike===this.listofBatsman[0]){
             this.playerOnStrike=this.listofBatsman[1];
         }else{
             this.playerOnStrike=this.listofBatsman[0];
         }
     }
    calculateScore(arr: Array<number>)
    {
        this.playerOnStrike=this.listofBatsman[0];
        arr.forEach((runsScored,ballNumber) => {
            if(runsScored%2===1)
            {
                if(this.playerOnStrike){
 this.playerOnStrike.addRuns(runsScored);
 this.playerOnStrike=this.listofBatsman[1];
                }
            }else{
                     if(this.playerOnStrike){
 this.playerOnStrike.addRuns(runsScored);
 
                }
            }
            this.totalScore+=runsScored;
            if((ballNumber+1)%6===0){
                this.changeStrike();
            }
        })
        printScore()
        {
            console.log('Total score:'this.totalScore)
            this.listofBatsman.forEach(Batsman);
            console.log('')
            console.log('${batsman.playername} scored ${batsman.numberOfRuns}')
        }
    }
}

....................................main.ts........................................

import {Scorer} from './scorer';
const scorer=new Scorer();
const batsman1=new Batsman('Kane-williamson');
const batsman1=new Batsman('Rashid Khan');
scorer.addBatsman(batsman1);
scorer.addBatsman(batsman2);
scorer.calculateScore([1,2,0,0,4,1,6,2,1,3]);
scorer.printScore();


............................................batsman.ts.....................................


import {Player} from './player'
class batsman extends Player
{
    
    constructor(name :string ,private numberofRunsScored:number, private  numberOfBallsFaced:number)
    {
        super(name);
        this.numberofRunsScored=0;
        this.numberOfBallsFaced=0;
    }
    get numberOfRuns()
    {
        return this.numberofRunsScored;
    }
    get numberOfBallsBatted()
    {
        return this.numberOfBallsFaced;
    }
    addRuns(run:number)
    {
        this.numberofRunsScored+=run;
    }

}

.....................................player.ts......................................


constructor(private name:string)
{

}
//getName():string{
    //return this.name;
//}
get playerName():string{
    return this.name;
}